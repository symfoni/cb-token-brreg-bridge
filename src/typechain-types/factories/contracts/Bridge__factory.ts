/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Bridge, BridgeInterface } from "../../contracts/Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bridgeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract CBToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106b63803806106b683398101604081905261002f916100b7565b61003833610067565b600180546001600160a01b039092166001600160a01b03199283168117909155600280549092161790556100e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c957600080fd5b81516001600160a01b03811681146100e057600080fd5b9392505050565b6105c0806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80632e1a7d4d1461008857806347e7ef241461009d57806355a373d6146100b0578063715018a6146100d95780638da5cb5b146100e1578063a9059cbb146100e9578063b9371343146100fc578063f2fde38b14610112578063fc0c546a14610125575b600080fd5b61009b6100963660046104a1565b610138565b005b61009b6100ab3660046104d6565b61019f565b6001546100c3906001600160a01b031681565b6040516100d09190610500565b60405180910390f35b61009b61020f565b6100c3610223565b61009b6100f73660046104d6565b610232565b610104610302565b6040519081526020016100d0565b61009b610120366004610514565b610379565b6002546100c3906001600160a01b031681565b600254604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061016a9033908590600401610536565b600060405180830381600087803b15801561018457600080fd5b505af1158015610198573d6000803e3d6000fd5b5050505050565b6101a76103f2565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906101d99085908590600401610536565b600060405180830381600087803b1580156101f357600080fd5b505af1158015610207573d6000803e3d6000fd5b505050505050565b6102176103f2565b6102216000610451565b565b6000546001600160a01b031690565b61023a6103f2565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061026c9085908590600401610536565b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af919061054f565b6102fe5760405162461bcd60e51b815260206004820152601b60248201527a151c985b9cd9995c88199c9bdb48189c9a5919d94819985a5b1959602a1b60448201526064015b60405180910390fd5b5050565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610333903090600401610500565b602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610571565b905090565b6103816103f2565b6001600160a01b0381166103e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f5565b6103ef81610451565b50565b336103fb610223565b6001600160a01b0316146102215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104b357600080fd5b5035919050565b80356001600160a01b03811681146104d157600080fd5b919050565b600080604083850312156104e957600080fd5b6104f2836104ba565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60006020828403121561052657600080fd5b61052f826104ba565b9392505050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561056157600080fd5b8151801515811461052f57600080fd5b60006020828403121561058357600080fd5b505191905056fea2646970667358221220737e74cd6578a5654ff93e30e928528b42b4005edb232f61f7bd705308df069f64736f6c63430008100033";

type BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bridge__factory extends ContractFactory {
  constructor(...args: BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bridge> {
    return super.deploy(_tokenContract, overrides || {}) as Promise<Bridge>;
  }
  override getDeployTransaction(
    _tokenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenContract, overrides || {});
  }
  override attach(address: string): Bridge {
    return super.attach(address) as Bridge;
  }
  override connect(signer: Signer): Bridge__factory {
    return super.connect(signer) as Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeInterface {
    return new utils.Interface(_abi) as BridgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge;
  }
}
