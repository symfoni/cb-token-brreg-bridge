/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DisperseWithData,
  DisperseWithDataInterface,
} from "../../../contracts/DisperseWithData.sol/DisperseWithData";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getDataLength",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "disperseEtherWithData",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseTokenSimple",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "disperseTokenWithDataSimple",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseEther",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "recipients",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "disperseTokenWithData",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "data",
    outputs: [
      {
        name: "",
        type: "bytes",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061126e806100206000396000f3006080604052600436106100745763ffffffff60e060020a6000350416633da7678881146100795780634b4afb77146100a457806351ba162c146100b9578063c73a2d60146100d9578063cfdcf468146100f9578063e63d38ed14610119578063eeeb62bd1461012c578063f0ba84401461014c575b600080fd5b34801561008557600080fd5b5061008e610179565b60405161009b919061119a565b60405180910390f35b6100b76100b2366004610e3f565b610180565b005b3480156100c557600080fd5b506100b76100d4366004610efb565b610270565b3480156100e557600080fd5b506100b76100f4366004610efb565b61034a565b34801561010557600080fd5b506100b7610114366004610f80565b6104e2565b6100b7610127366004610dd1565b6106df565b34801561013857600080fd5b506100b7610147366004610f80565b610798565b34801561015857600080fd5b5061016c610167366004611034565b610a5b565b60405161009b9190611189565b6000545b90565b6000805b868210156102005787878381811061019857fe5b90506020020135600160a060020a0316600160a060020a03166108fc87878581811015156101c257fe5b905060200201359081150290604051600060405180830381858888f193505050501580156101f4573d6000803e3d6000fd5b50600190910190610184565b503031600081111561023b57604051339082156108fc029083906000818181858888f19350505050158015610239573d6000803e3d6000fd5b505b600080546001810180835591805261026490600080516020611215833981519152018686610c5b565b50505050505050505050565b60005b8381101561034257600160a060020a0386166323b872dd3387878581811061029757fe5b90506020020135600160a060020a031686868681811015156102b557fe5b905060200201356040518463ffffffff1660e060020a0281526004016102dd939291906110c8565b602060405180830381600087803b1580156102f757600080fd5b505af115801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061032f9190810190610edd565b151561033a57600080fd5b600101610273565b505050505050565b6000805b848110156103785783838281811061036257fe5b602002919091013592909201915060010161034e565b60405160e060020a6323b872dd028152600160a060020a038816906323b872dd906103ab903390309087906004016110c8565b602060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103fd9190810190610edd565b151561040857600080fd5b5060005b848110156104d957600160a060020a03871663a9059cbb87878481811061042f57fe5b90506020020135600160a060020a0316868685818110151561044d57fe5b905060200201356040518363ffffffff1660e060020a028152600401610474929190611136565b602060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104c69190810190610edd565b15156104d157600080fd5b60010161040c565b50505050505050565b600080600160a060020a031661051f896040805190810160405280600c815260200160a160020a6b22a921989a18182a37b5b2b702815250610b02565b600160a060020a03161415610606575060005b8581101561060157600160a060020a0388166323b872dd3389898581811061055657fe5b90506020020135600160a060020a0316888886818110151561057457fe5b905060200201356040518463ffffffff1660e060020a02815260040161059c939291906110c8565b602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105ee9190810190610edd565b15156105f957600080fd5b600101610532565b6106b6565b5060005b858110156106b657600160a060020a03881663ee532f313389898581811061062e57fe5b90506020020135600160a060020a0316888886818110151561064c57fe5b9050602002013587876040518663ffffffff1660e060020a0281526004016106789594939291906110f0565b600060405180830381600087803b15801561069257600080fd5b505af11580156106a6573d6000803e3d6000fd5b50506001909201915061060a9050565b600080546001810180835591805261026490600080516020611215833981519152018585610c5b565b6000805b8482101561075f578585838181106106f757fe5b90506020020135600160a060020a0316600160a060020a03166108fc858585818110151561072157fe5b905060200201359081150290604051600060405180830381858888f19350505050158015610753573d6000803e3d6000fd5b506001909101906106e3565b503031600081111561034257604051339082156108fc029083906000818181858888f193505050501580156104d9573d6000803e3d6000fd5b6000805b868110156107c6578585828181106107b057fe5b602002919091013592909201915060010161079c565b60405160e060020a6323b872dd028152600160a060020a038a16906323b872dd906107f9903390309087906004016110c8565b602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084b9190810190610edd565b151561085657600080fd5b6000600160a060020a03166108928a6040805190810160405280600c815260200160a160020a6b22a921989a18182a37b5b2b702815250610b02565b600160a060020a03161415610977575060005b8681101561097257600160a060020a03891663a9059cbb8989848181106108c857fe5b90506020020135600160a060020a031688888581811015156108e657fe5b905060200201356040518363ffffffff1660e060020a02815260040161090d929190611136565b602060405180830381600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095f9190810190610edd565b151561096a57600080fd5b6001016108a5565b610a25565b5060005b86811015610a2557600160a060020a038916632535f76289898481811061099e57fe5b90506020020135600160a060020a031688888581811015156109bc57fe5b9050602002013587876040518563ffffffff1660e060020a0281526004016109e79493929190611151565b600060405180830381600087803b158015610a0157600080fd5b505af1158015610a15573d6000803e3d6000fd5b50506001909201915061097b9050565b6000805460018101808355918052610a4e90600080516020611215833981519152018686610c5b565b5050505050505050505050565b6000805482908110610a6957fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015610afa5780601f10610acf57610100808354040283529160200191610afa565b820191906000526020600020905b815481529060010190602001808311610add57829003601f168201915b505050505081565b600080826040516020018082805190602001908083835b60208310610b385780518252601f199092019160209182019101610b19565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610b9b5780518252601f199092019160209182019101610b7c565b5181516020939093036101000a60001901801990911692169190911790526040519201829003822060e160020a63555ddc650283529450731820a4b7618bde71dce8cdc73aab6c95905fad24935063aabbb8ca9250610c01918891508590600401611136565b602060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c539190810190610db3565b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c9c5782800160ff19823516178555610cc9565b82800160010185558215610cc9579182015b82811115610cc9578235825591602001919060010190610cae565b50610cd5929150610cd9565b5090565b61017d91905b80821115610cd55760008155600101610cdf565b6000610cff82516111b2565b9392505050565b600080601f83018413610d1857600080fd5b5081356001604060020a03811115610d2f57600080fd5b602083019150836020820283011115610d4757600080fd5b9250929050565b6000610cff82516111be565b600080601f83018413610d6c57600080fd5b5081356001604060020a03811115610d8357600080fd5b602083019150836001820283011115610d4757600080fd5b6000610cff82356111c3565b6000610cff823561017d565b600060208284031215610dc557600080fd5b6000610c538484610cf3565b60008060008060408587031215610de757600080fd5b84356001604060020a03811115610dfd57600080fd5b610e0987828801610d06565b945094505060208501356001604060020a03811115610e2757600080fd5b610e3387828801610d06565b95989497509550505050565b60008060008060008060608789031215610e5857600080fd5b86356001604060020a03811115610e6e57600080fd5b610e7a89828a01610d06565b965096505060208701356001604060020a03811115610e9857600080fd5b610ea489828a01610d06565b945094505060408701356001604060020a03811115610ec257600080fd5b610ece89828a01610d5a565b92509250509295509295509295565b600060208284031215610eef57600080fd5b6000610c538484610d4e565b600080600080600060608688031215610f1357600080fd5b6000610f1f8888610d9b565b95505060208601356001604060020a03811115610f3b57600080fd5b610f4788828901610d06565b945094505060408601356001604060020a03811115610f6557600080fd5b610f7188828901610d06565b92509250509295509295909350565b60008060008060008060006080888a031215610f9b57600080fd5b6000610fa78a8a610d9b565b97505060208801356001604060020a03811115610fc357600080fd5b610fcf8a828b01610d06565b965096505060408801356001604060020a03811115610fed57600080fd5b610ff98a828b01610d06565b945094505060608801356001604060020a0381111561101757600080fd5b6110238a828b01610d5a565b925092505092959891949750929550565b60006020828403121561104657600080fd5b6000610c538484610da7565b61105b816111b2565b82525050565b61105b8161017d565b60008284526020840193506110808385846111ce565b6110898361120a565b9093019392505050565b600061109e826111ae565b8084526110b28160208601602086016111da565b6110bb8161120a565b9093016020019392505050565b606081016110d68286611052565b6110e36020830185611052565b610c536040830184611061565b608081016110fe8288611052565b61110b6020830187611052565b6111186040830186611061565b818103606083015261112b81848661106a565b979650505050505050565b604081016111448285611052565b610cff6020830184611061565b6060810161115f8287611052565b61116c6020830186611061565b818103604083015261117f81848661106a565b9695505050505050565b60208082528101610cff8184611093565b602081016111a88284611061565b92915050565b5190565b600160a060020a031690565b151590565b60006111a8826111b2565b82818337506000910152565b60005b838110156111f55781810151838201526020016111dd565b83811115611204576000848401525b50505050565b601f01601f1916905600290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a265627a7a723058201d136dbe11c47647601304fd93b524723f28707108f9fc9488257d9b319b276c6c6578706572696d656e74616cf50037";

type DisperseWithDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisperseWithDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisperseWithData__factory extends ContractFactory {
  constructor(...args: DisperseWithDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DisperseWithData> {
    return super.deploy(overrides || {}) as Promise<DisperseWithData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DisperseWithData {
    return super.attach(address) as DisperseWithData;
  }
  override connect(signer: Signer): DisperseWithData__factory {
    return super.connect(signer) as DisperseWithData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisperseWithDataInterface {
    return new utils.Interface(_abi) as DisperseWithDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisperseWithData {
    return new Contract(address, _abi, signerOrProvider) as DisperseWithData;
  }
}
