/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC1820Registry,
  IERC1820RegistryInterface,
} from "../../../contracts/DisperseWithData.sol/IERC1820Registry";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
      {
        name: "_interfaceHash",
        type: "bytes32",
      },
      {
        name: "implementer",
        type: "address",
      },
    ],
    name: "setInterfaceImplementer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
      {
        name: "_interfaceHash",
        type: "bytes32",
      },
    ],
    name: "getInterfaceImplementer",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

export class IERC1820Registry__factory {
  static readonly abi = _abi;
  static createInterface(): IERC1820RegistryInterface {
    return new utils.Interface(_abi) as IERC1820RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC1820Registry {
    return new Contract(address, _abi, signerOrProvider) as IERC1820Registry;
  }
}
